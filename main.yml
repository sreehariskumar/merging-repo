---
- name: "installing LAMP stack"
  hosts: amazon
  become: yes
  vars_files: variables.yml
  tasks:
 
    - name: "installing httpd"
      yum:
        name: httpd
        state: present
 
    - name: "starting/enabling httpd service"
      service:
        name: httpd
        state: restarted
        enabled: true
 
    - name: "creating httpd conf file from template"
      template:
        src: "./httpd.conf.j2"
        dest: "/etc/httpd/conf/httpd.conf"
 
    - name: "creating virtualhost from template"
      template:
        src: "./virtualhost.conf.j2"
        dest: "/etc/httpd/conf.d/{{ httpd_domain }}.conf"
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
 
    - name: "creating document root"
      file:
        path: "/var/www/html/{{ httpd_domain }}"
        state: directory
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"

    - name: "installing package"
      yum:
        name: mariadb-server
        state: present

    - name: "restarting & enabling service"
      service:
        name: mariadb
        state: restarted
        enabled: true

    - name: "updating root pass"
      ignore_errors: true
      mysql_user:
        login_user: root
        login_password: ""
        name: root
        password: "{{ mariadb_root_pass }}"
        host_all: true

    - name: "removing anonymous users"
      mysql_user:
        login_user: root
        login_password: "{{ mariadb_root_pass }}"
        name: ""
        password: ""
        host_all: true
        state: absent

    - name: "creating db"
      mysql_db:
        login_user: root
        login_password: "{{ mariadb_root_pass }}"
        name: "{{ mariadb_extra_db }}"
        state: present

    - name: "creating user"
      mysql_user:
        login_user: root
        login_password: "{{ mariadb_root_pass }}"
        name: "{{ mariadb_extra_user }}"
        password: "{{ mariadb_extra_pass }}"
        state: present
        host: "%"
        priv: "{{ mariadb_extra_db }}.*:ALL"

    - name: "enabling php"
      shell: amazon-linux-support install php7.4 -y

    - name: "Wordpress - downloading archive"
      get_url:
        url: "{{ wp_url }}"
        dest: "/tmp/wordpress.tar.gz"

    - name: "Wordpress - extracting archive"
      unarchive:
        src: "/tmp/wordpress.tar.gz"
        dest: "/tmp/"
        remote_src: true

    - name: "Wordpress - copying files"
      copy:
        src: "/tmp/wordpress/"
        dest: "/var/www/html/{{ httpd_domain }}/"
        remote_src: true
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"

    - name: "Wordpress - creating wp-config file from template"
      template:
        src: "./wp-config.php.j2"
        dest: "/var/www/html/{{ httpd_domain }}/wp-config.php"
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
